def get_location_geopy(zipcode: str, user_agent: Optional[str] = None) -> Tuple[float, float]:
    """Get latitude and longitude from the given zip code using geopy library"""
    if not user_agent:
        user_agent = os.environ.get("GEOCODER_USER_AGENT")
        if not user_agent:
            raise ValueError("Geocoder user agent is missing")

    geolocator = Nominatim(user_agent=user_agent)
    try:
        location = geolocator.geocode(zipcode)
        center = location.latitude, location.longitude
    except (geopy.exc.GeopyError, AttributeError):
        raise ValueError("Failed to get location from geocoder")

    return center

def calculate_distance_geopy(center: Tuple[float, float], job_location: str, user_agent: Optional[str] = None) -> Optional[float]:
    """Calculate the distance between the center and job location using geopy library"""
    if not user_agent:
        user_agent = os.environ.get("GEOCODER_USER_AGENT")
        if not user_agent:
            raise ValueError("Geocoder user agent is missing")

    try:
        geolocator = geopy.Nominatim(user_agent=user_agent)
        job_location = geolocator.geocode(job_location)
        job_location = job_location.latitude, job_location.longitude
        return geopy.distance.distance(center, job_location).miles
    except (geopy.exc.GeopyError, AttributeError):
        return None

def calculate_distance_google(zipcode: str, job_location: str, api_key: Optional[str] = None) -> Optional[float]:
    """Calculate the distance between the center and job location using Google Maps API"""
    if not api_key:
        api_key = os.environ.get("GOOGLE_MAPS_API_KEY")
        if not api_key:
            raise ValueError("Google Maps API key is missing")

    try:
        gmaps = googlemaps.Client(key=api_key)
        center_location = gmaps.geocode(zipcode)[0]['geometry']['location']
        job_location = gmaps.geocode(job_location)[0]["geometry"]["location"]
        return googlemaps.distance.distance((center_location["lat"], center_location["lng"]),(job_location["lat"], job_location["lng"])).miles
    except (googlemaps.exceptions.ApiError, IndexError, KeyError):
        return None


